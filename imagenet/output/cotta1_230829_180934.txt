[23/08/29 18:09:34] [conf.py:  210]: PyTorch Version: torch=1.10.0, cuda=11.3, cudnn=8200
[23/08/29 18:09:34] [conf.py:  212]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: ./ckpt
CORRUPTION:
  DATASET: imagenet
  NUM_EX: 5000
  SEVERITY: [5]
  TYPE: ['jpeg_compression', 'shot_noise', 'zoom_blur', 'frost', 'contrast', 'fog', 'defocus_blur', 'elastic_transform', 'gaussian_noise', 'brightness', 'glass_blur', 'impulse_noise', 'pixelate', 'snow', 'motion_blur']
CUDNN:
  BENCHMARK: True
DATA_DIR: /root/datasets
DESC: 
LOG_DEST: cotta1_230829_180934.txt
LOG_TIME: 230829_180934
MODEL:
  ADAPTATION: cotta
  ARCH: Standard_R50
  EPISODIC: False
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.01
  METHOD: SGD
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: ./output
TEST:
  BATCH_SIZE: 64
[23/08/29 18:09:46] [imagenetc.py:   38]: test-time adaptation: CoTTA
[23/08/29 18:09:46] [imagenetc.py:  145]: model for adaptation: ResNet(
  (feature_x): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (clean_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (adv_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
      )
    )
    (5): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (clean_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (adv_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (clean_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (clean_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
      )
    )
  )
  (head): Head(
    (layer3_0): Bottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (clean_bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
    )
    (layer3_1): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (layer3_2): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (layer3_3): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (layer3_4): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (layer3_5): Bottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (layer4_0): Bottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (clean_bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (adv_bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
    )
    (layer4_1): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (layer4_2): Bottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (clean_bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (clean_bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (adv_bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (relu): ReLU(inplace=True)
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (flatten): Flatten(start_dim=1, end_dim=-1)
    (fc): Linear(in_features=2048, out_features=1000, bias=True)
  )
)
[23/08/29 18:09:46] [imagenetc.py:  146]: params for adaptation: ['feature_x.0.weight', 'feature_x.1.weight', 'feature_x.1.bias', 'feature_x.4.0.conv1.weight', 'feature_x.4.0.clean_bn1.weight', 'feature_x.4.0.clean_bn1.bias', 'feature_x.4.0.adv_bn1.weight', 'feature_x.4.0.adv_bn1.bias', 'feature_x.4.0.conv2.weight', 'feature_x.4.0.clean_bn2.weight', 'feature_x.4.0.clean_bn2.bias', 'feature_x.4.0.adv_bn2.weight', 'feature_x.4.0.adv_bn2.bias', 'feature_x.4.0.conv3.weight', 'feature_x.4.0.clean_bn3.weight', 'feature_x.4.0.clean_bn3.bias', 'feature_x.4.0.adv_bn3.weight', 'feature_x.4.0.adv_bn3.bias', 'feature_x.4.0.downsample.conv.weight', 'feature_x.4.0.downsample.clean_bn.weight', 'feature_x.4.0.downsample.clean_bn.bias', 'feature_x.4.0.downsample.adv_bn.weight', 'feature_x.4.0.downsample.adv_bn.bias', 'feature_x.4.1.conv1.weight', 'feature_x.4.1.clean_bn1.weight', 'feature_x.4.1.clean_bn1.bias', 'feature_x.4.1.adv_bn1.weight', 'feature_x.4.1.adv_bn1.bias', 'feature_x.4.1.conv2.weight', 'feature_x.4.1.clean_bn2.weight', 'feature_x.4.1.clean_bn2.bias', 'feature_x.4.1.adv_bn2.weight', 'feature_x.4.1.adv_bn2.bias', 'feature_x.4.1.conv3.weight', 'feature_x.4.1.clean_bn3.weight', 'feature_x.4.1.clean_bn3.bias', 'feature_x.4.1.adv_bn3.weight', 'feature_x.4.1.adv_bn3.bias', 'feature_x.4.2.conv1.weight', 'feature_x.4.2.clean_bn1.weight', 'feature_x.4.2.clean_bn1.bias', 'feature_x.4.2.adv_bn1.weight', 'feature_x.4.2.adv_bn1.bias', 'feature_x.4.2.conv2.weight', 'feature_x.4.2.clean_bn2.weight', 'feature_x.4.2.clean_bn2.bias', 'feature_x.4.2.adv_bn2.weight', 'feature_x.4.2.adv_bn2.bias', 'feature_x.4.2.conv3.weight', 'feature_x.4.2.clean_bn3.weight', 'feature_x.4.2.clean_bn3.bias', 'feature_x.4.2.adv_bn3.weight', 'feature_x.4.2.adv_bn3.bias', 'feature_x.5.0.conv1.weight', 'feature_x.5.0.clean_bn1.weight', 'feature_x.5.0.clean_bn1.bias', 'feature_x.5.0.adv_bn1.weight', 'feature_x.5.0.adv_bn1.bias', 'feature_x.5.0.conv2.weight', 'feature_x.5.0.clean_bn2.weight', 'feature_x.5.0.clean_bn2.bias', 'feature_x.5.0.adv_bn2.weight', 'feature_x.5.0.adv_bn2.bias', 'feature_x.5.0.conv3.weight', 'feature_x.5.0.clean_bn3.weight', 'feature_x.5.0.clean_bn3.bias', 'feature_x.5.0.adv_bn3.weight', 'feature_x.5.0.adv_bn3.bias', 'feature_x.5.0.downsample.conv.weight', 'feature_x.5.0.downsample.clean_bn.weight', 'feature_x.5.0.downsample.clean_bn.bias', 'feature_x.5.0.downsample.adv_bn.weight', 'feature_x.5.0.downsample.adv_bn.bias', 'feature_x.5.1.conv1.weight', 'feature_x.5.1.clean_bn1.weight', 'feature_x.5.1.clean_bn1.bias', 'feature_x.5.1.adv_bn1.weight', 'feature_x.5.1.adv_bn1.bias', 'feature_x.5.1.conv2.weight', 'feature_x.5.1.clean_bn2.weight', 'feature_x.5.1.clean_bn2.bias', 'feature_x.5.1.adv_bn2.weight', 'feature_x.5.1.adv_bn2.bias', 'feature_x.5.1.conv3.weight', 'feature_x.5.1.clean_bn3.weight', 'feature_x.5.1.clean_bn3.bias', 'feature_x.5.1.adv_bn3.weight', 'feature_x.5.1.adv_bn3.bias', 'feature_x.5.2.conv1.weight', 'feature_x.5.2.clean_bn1.weight', 'feature_x.5.2.clean_bn1.bias', 'feature_x.5.2.adv_bn1.weight', 'feature_x.5.2.adv_bn1.bias', 'feature_x.5.2.conv2.weight', 'feature_x.5.2.clean_bn2.weight', 'feature_x.5.2.clean_bn2.bias', 'feature_x.5.2.adv_bn2.weight', 'feature_x.5.2.adv_bn2.bias', 'feature_x.5.2.conv3.weight', 'feature_x.5.2.clean_bn3.weight', 'feature_x.5.2.clean_bn3.bias', 'feature_x.5.2.adv_bn3.weight', 'feature_x.5.2.adv_bn3.bias', 'feature_x.5.3.conv1.weight', 'feature_x.5.3.clean_bn1.weight', 'feature_x.5.3.clean_bn1.bias', 'feature_x.5.3.adv_bn1.weight', 'feature_x.5.3.adv_bn1.bias', 'feature_x.5.3.conv2.weight', 'feature_x.5.3.clean_bn2.weight', 'feature_x.5.3.clean_bn2.bias', 'feature_x.5.3.adv_bn2.weight', 'feature_x.5.3.adv_bn2.bias', 'feature_x.5.3.conv3.weight', 'feature_x.5.3.clean_bn3.weight', 'feature_x.5.3.clean_bn3.bias', 'feature_x.5.3.adv_bn3.weight', 'feature_x.5.3.adv_bn3.bias', 'head.layer3_0.conv1.weight', 'head.layer3_0.clean_bn1.weight', 'head.layer3_0.clean_bn1.bias', 'head.layer3_0.adv_bn1.weight', 'head.layer3_0.adv_bn1.bias', 'head.layer3_0.conv2.weight', 'head.layer3_0.clean_bn2.weight', 'head.layer3_0.clean_bn2.bias', 'head.layer3_0.adv_bn2.weight', 'head.layer3_0.adv_bn2.bias', 'head.layer3_0.conv3.weight', 'head.layer3_0.clean_bn3.weight', 'head.layer3_0.clean_bn3.bias', 'head.layer3_0.adv_bn3.weight', 'head.layer3_0.adv_bn3.bias', 'head.layer3_0.downsample.conv.weight', 'head.layer3_0.downsample.clean_bn.weight', 'head.layer3_0.downsample.clean_bn.bias', 'head.layer3_0.downsample.adv_bn.weight', 'head.layer3_0.downsample.adv_bn.bias', 'head.layer3_1.conv1.weight', 'head.layer3_1.clean_bn1.weight', 'head.layer3_1.clean_bn1.bias', 'head.layer3_1.adv_bn1.weight', 'head.layer3_1.adv_bn1.bias', 'head.layer3_1.conv2.weight', 'head.layer3_1.clean_bn2.weight', 'head.layer3_1.clean_bn2.bias', 'head.layer3_1.adv_bn2.weight', 'head.layer3_1.adv_bn2.bias', 'head.layer3_1.conv3.weight', 'head.layer3_1.clean_bn3.weight', 'head.layer3_1.clean_bn3.bias', 'head.layer3_1.adv_bn3.weight', 'head.layer3_1.adv_bn3.bias', 'head.layer3_2.conv1.weight', 'head.layer3_2.clean_bn1.weight', 'head.layer3_2.clean_bn1.bias', 'head.layer3_2.adv_bn1.weight', 'head.layer3_2.adv_bn1.bias', 'head.layer3_2.conv2.weight', 'head.layer3_2.clean_bn2.weight', 'head.layer3_2.clean_bn2.bias', 'head.layer3_2.adv_bn2.weight', 'head.layer3_2.adv_bn2.bias', 'head.layer3_2.conv3.weight', 'head.layer3_2.clean_bn3.weight', 'head.layer3_2.clean_bn3.bias', 'head.layer3_2.adv_bn3.weight', 'head.layer3_2.adv_bn3.bias', 'head.layer3_3.conv1.weight', 'head.layer3_3.clean_bn1.weight', 'head.layer3_3.clean_bn1.bias', 'head.layer3_3.adv_bn1.weight', 'head.layer3_3.adv_bn1.bias', 'head.layer3_3.conv2.weight', 'head.layer3_3.clean_bn2.weight', 'head.layer3_3.clean_bn2.bias', 'head.layer3_3.adv_bn2.weight', 'head.layer3_3.adv_bn2.bias', 'head.layer3_3.conv3.weight', 'head.layer3_3.clean_bn3.weight', 'head.layer3_3.clean_bn3.bias', 'head.layer3_3.adv_bn3.weight', 'head.layer3_3.adv_bn3.bias', 'head.layer3_4.conv1.weight', 'head.layer3_4.clean_bn1.weight', 'head.layer3_4.clean_bn1.bias', 'head.layer3_4.adv_bn1.weight', 'head.layer3_4.adv_bn1.bias', 'head.layer3_4.conv2.weight', 'head.layer3_4.clean_bn2.weight', 'head.layer3_4.clean_bn2.bias', 'head.layer3_4.adv_bn2.weight', 'head.layer3_4.adv_bn2.bias', 'head.layer3_4.conv3.weight', 'head.layer3_4.clean_bn3.weight', 'head.layer3_4.clean_bn3.bias', 'head.layer3_4.adv_bn3.weight', 'head.layer3_4.adv_bn3.bias', 'head.layer3_5.conv1.weight', 'head.layer3_5.clean_bn1.weight', 'head.layer3_5.clean_bn1.bias', 'head.layer3_5.adv_bn1.weight', 'head.layer3_5.adv_bn1.bias', 'head.layer3_5.conv2.weight', 'head.layer3_5.clean_bn2.weight', 'head.layer3_5.clean_bn2.bias', 'head.layer3_5.adv_bn2.weight', 'head.layer3_5.adv_bn2.bias', 'head.layer3_5.conv3.weight', 'head.layer3_5.clean_bn3.weight', 'head.layer3_5.clean_bn3.bias', 'head.layer3_5.adv_bn3.weight', 'head.layer3_5.adv_bn3.bias', 'head.layer4_0.conv1.weight', 'head.layer4_0.clean_bn1.weight', 'head.layer4_0.clean_bn1.bias', 'head.layer4_0.adv_bn1.weight', 'head.layer4_0.adv_bn1.bias', 'head.layer4_0.conv2.weight', 'head.layer4_0.clean_bn2.weight', 'head.layer4_0.clean_bn2.bias', 'head.layer4_0.adv_bn2.weight', 'head.layer4_0.adv_bn2.bias', 'head.layer4_0.conv3.weight', 'head.layer4_0.clean_bn3.weight', 'head.layer4_0.clean_bn3.bias', 'head.layer4_0.adv_bn3.weight', 'head.layer4_0.adv_bn3.bias', 'head.layer4_0.downsample.conv.weight', 'head.layer4_0.downsample.clean_bn.weight', 'head.layer4_0.downsample.clean_bn.bias', 'head.layer4_0.downsample.adv_bn.weight', 'head.layer4_0.downsample.adv_bn.bias', 'head.layer4_1.conv1.weight', 'head.layer4_1.clean_bn1.weight', 'head.layer4_1.clean_bn1.bias', 'head.layer4_1.adv_bn1.weight', 'head.layer4_1.adv_bn1.bias', 'head.layer4_1.conv2.weight', 'head.layer4_1.clean_bn2.weight', 'head.layer4_1.clean_bn2.bias', 'head.layer4_1.adv_bn2.weight', 'head.layer4_1.adv_bn2.bias', 'head.layer4_1.conv3.weight', 'head.layer4_1.clean_bn3.weight', 'head.layer4_1.clean_bn3.bias', 'head.layer4_1.adv_bn3.weight', 'head.layer4_1.adv_bn3.bias', 'head.layer4_2.conv1.weight', 'head.layer4_2.clean_bn1.weight', 'head.layer4_2.clean_bn1.bias', 'head.layer4_2.adv_bn1.weight', 'head.layer4_2.adv_bn1.bias', 'head.layer4_2.conv2.weight', 'head.layer4_2.clean_bn2.weight', 'head.layer4_2.clean_bn2.bias', 'head.layer4_2.adv_bn2.weight', 'head.layer4_2.adv_bn2.bias', 'head.layer4_2.conv3.weight', 'head.layer4_2.clean_bn3.weight', 'head.layer4_2.clean_bn3.bias', 'head.layer4_2.adv_bn3.weight', 'head.layer4_2.adv_bn3.bias', 'head.fc.weight', 'head.fc.bias']
[23/08/29 18:09:46] [imagenetc.py:  147]: optimizer for adaptation: SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: True
    weight_decay: 0.0
)
[23/08/29 18:09:47] [imagenetc.py:   49]: resetting model
[23/08/29 18:12:35] [imagenetc.py:   60]: error % [jpeg_compression5]: 66.74%
[23/08/29 18:12:35] [imagenetc.py:   51]: not resetting model
[23/08/29 18:15:10] [imagenetc.py:   60]: error % [shot_noise5]: 85.12%
[23/08/29 18:15:10] [imagenetc.py:   51]: not resetting model
[23/08/29 18:17:11] [imagenetc.py:   60]: error % [zoom_blur5]: 64.76%
[23/08/29 18:17:11] [imagenetc.py:   51]: not resetting model
[23/08/29 18:19:12] [imagenetc.py:   60]: error % [frost5]: 66.84%
[23/08/29 18:19:12] [imagenetc.py:   51]: not resetting model
[23/08/29 18:21:11] [imagenetc.py:   60]: error % [contrast5]: 87.34%
[23/08/29 18:21:11] [imagenetc.py:   51]: not resetting model
[23/08/29 18:23:11] [imagenetc.py:   60]: error % [fog5]: 53.16%
[23/08/29 18:23:11] [imagenetc.py:   51]: not resetting model
[23/08/29 18:25:12] [imagenetc.py:   60]: error % [defocus_blur5]: 79.58%
[23/08/29 18:25:12] [imagenetc.py:   51]: not resetting model
[23/08/29 18:27:11] [imagenetc.py:   60]: error % [elastic_transform5]: 51.68%
[23/08/29 18:27:11] [imagenetc.py:   51]: not resetting model
[23/08/29 18:29:15] [imagenetc.py:   60]: error % [gaussian_noise5]: 71.76%
[23/08/29 18:29:15] [imagenetc.py:   51]: not resetting model
[23/08/29 18:31:16] [imagenetc.py:   60]: error % [brightness5]: 38.46%
[23/08/29 18:31:16] [imagenetc.py:   51]: not resetting model
[23/08/29 18:33:18] [imagenetc.py:   60]: error % [glass_blur5]: 72.60%
[23/08/29 18:33:18] [imagenetc.py:   51]: not resetting model
[23/08/29 18:35:23] [imagenetc.py:   60]: error % [impulse_noise5]: 66.56%
[23/08/29 18:35:23] [imagenetc.py:   51]: not resetting model
[23/08/29 18:37:24] [imagenetc.py:   60]: error % [pixelate5]: 44.78%
[23/08/29 18:37:24] [imagenetc.py:   51]: not resetting model
[23/08/29 18:39:26] [imagenetc.py:   60]: error % [snow5]: 56.30%
[23/08/29 18:39:26] [imagenetc.py:   51]: not resetting model
[23/08/29 18:41:27] [imagenetc.py:   60]: error % [motion_blur5]: 60.08%
[23/08/29 18:41:27] [imagenetc.py:   62]: mean_error % :  64.38%
